/*
This is the visible area of you carousel.
Set a width here to define how much items are visible.
The width can be either fixed in px or flexible in %.
Position must be relative!
*/

body {
    background-color: bisque;
}

/* Carousel */
.jcarousel-wrapper,
.select-wrapper {
    margin: 100px;
    position: relative;
}

.jcarousel {
    width: 748px;
    position: relative;
    overflow: hidden;

    border: 10px solid white;
    border-radius: 5px;
    box-shadow: 0px 0px 25px 4px rgba(0,0,0,0.75);
}

/*
This is the container of the carousel items.
You must ensure that the position is relative or absolute and
that the width is big enough to contain all items.
*/
.jcarousel ul {
    width: 10000em;
    position: relative;

    /* Optional, required in this case since it's a <ul> element */
    list-style: none;
    margin: 0;
    padding: 0;
}

.jcarousel-prev,
.jcarousel-next {
    position: absolute;
    top: 160px;
    width: 30px;
    height: 30px;
    text-align: center;
    background: #4E443C;
    color: #fff;
    text-decoration: none;
    text-shadow: 0 0 1px #000;
    font: 24px/27px Arial, sans-serif;
    border-radius: 30px;
    box-shadow: 0 0 2px #999;
}

.jcarousel-prev {
    left: 30px;
}

.jcarousel-next {
    left: 688px;
}

a.jcarousel-prev:hover,
a.jcarousel-next:hover {
    text-decoration: none;
    color: white;
}

/*
These are the item elements. jCarousel works best, if the items
have a fixed width and height (but it's not required).
*/
.jcarousel li {
    /* Required only for block elements like <li>'s */
    float: left;
    width: 748px;
}

.jcarousel-pagination {
    position: absolute;
    bottom: 20px;
    left: 364px;
}

 .jcarousel-pagination a {
    text-decoration: none;
    display: inline-block;
    
    font-size: 10px;
    line-height: 4px;
    min-width: 12px;
    
    background: #fff;
    color: #4E443C;
    border-radius: 14px;
    padding: 4px;
    text-align: center;
    
    margin-right: 4px;
    
    opacity: .75;
}

.jcarousel-pagination a.active {
    background: #4E443C;
    color: #fff;
    opacity: .7;
    text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.75);
}


/* CHECKBOXES CONTROL */

.checkboxes-wrapper,
.css-checkbox-wrapper {
    margin-left: 100px;
}

.checkboxes-wrapper,
.css-checkbox-wrapper {
    width: 200px;
    padding: 20px;
    border: 1px solid #999;
    border-radius: 10px;
    background-color: aliceblue;
    float: left;
}

.checkboxes-wrapper p,
.css-checkbox-wrapper p {
    font-weight: 700;
}

span.niceCheck {
    margin-left: 4px;
    margin-bottom: -3px;
    overflow: hidden;
}

.niceCheck {
    width: 17px;
    height: 17px;
    display: inline-block;
    cursor: pointer;
    background: url('../img/checkbox-sprite.png') no-repeat;
}

.niceChecked {
	background-position: 0 -17px;
}

.niceCheck input {
    margin-left: -100px; /* можно задать побольше чтобы наверняка скрыть поле */
}

.niceCheckDisabled {
	background-image: url('../img/checkbox-disabled.png');
}

/* CSS checkboxes */
.css-checkbox-wrapper input[type=checkbox] {
	position: absolute;
	clip: rect(0, 0, 0, 0);
}

.css-checkbox-wrapper label {
	cursor: pointer;
}

.css-checkbox-wrapper label:after {
	content: " ";
	display: inline-block;
	width: 17px;
	height: 17px;
	background: url('../img/css-checkbox.png');
	position: relative;
	top: 3px;
    margin-left: 10px;
}

.css-checkbox-wrapper input[type=checkbox]:checked + label:after {
background-position: 0 -17px;
}

.css-checkbox-wrapper label:hover:after {
background-position: 0 -34px;
}

.css-checkbox-wrapper input[type=checkbox]:checked + label:hover:after {
background-position: 0 -51px;
}